version: "3.8"

services:
  api:
    build: ./db_api
    container_name: api_p7
    environment:
     DB_USR_FILE: /run/secrets/db_usr
     DB_PASS_FILE: /run/secrets/db_pass
     DB_NAME_FILE: /run/secrets/db_name
     DB_HOST: database
     MODERATOR_PASS_FILE: /run/secrets/moderator_pass
    secrets:
     - db_usr
     - db_pass
     - db_name 
     - moderator_pass
    ports:
     - 3000:3000
    networks:
     - front
     - db
    restart: unless-stopped
    depends_on:
     - database

  front:
   build: ./front
   container_name: front_p7
   ports:
    - 80:80
   networks:
    - front
   restart: unless-stopped
   depends_on:
    - api
    - websocket
  websocket:
    build: ./ws
    container_name: ws_p7
    ports:
     - 1895:1895
    networks:
      - front
      - db
    depends_on:
      - database

  database:
    image: mysql:latest
    container_name: db_p7
    environment:
     MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root
     MYSQL_PASSWORD_FILE: /run/secrets/db_pass
     MYSQL_USER_FILE: /run/secrets/db_usr
     MYSQL_DATABASE_FILE: /run/secrets/db_name
    secrets:
      - db_root
      - db_pass
      - db_usr 
      - db_name 
    networks:
     - db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 20s
      timeout: 20s
      retries: 10
      start_period: 20s

networks:
  db:
  front:

secrets:
  db_root:
   file: ./secrets/db_root
  db_pass:
   file: ./secrets/db_pass
  db_usr:
   file: ./secrets/db_usr
  
  db_name:
   file: ./secrets/db_name
  moderator_pass:
   file: ./secrets/moderator_pass
